name: CI/CD Workflow - "Library Catalog" App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    #strategy:
    # matrix:
    # it will run 3 jobs on 3 separated machines
    # node-version: [16.x, 18.x, 20.x]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        # dynamically change the node version
      # - name: Use Node.js {{ matrix.node-version }}
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          # dynamically change the node version
          # node-version: ${{ matrix.node-version }}
          node-version: 20.x
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Replace the config settings
        run: echo "export const settings = { host:\"http://localhost:3030\" };" > src/config.js
      - name: Start backend
        run: cd server && node server.js &
      - name: Start frontend
        run: npm start &
      - name: Install playwright
        run: npx playwright install
      - name: Run integration tests
        run: npm test

  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build-test
    steps:
      - name: Deploy to Render.com
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service_id: ${{ secrets.BACKEND }}
          api_key: ${{ secrets.RENDER_TOKEN }}

  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: deploy-backend
    steps:
      - name: Deploy to Render.com
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service_id: ${{ secrets.FRONTEND }}
          api_key: ${{ secrets.RENDER_TOKEN }}
